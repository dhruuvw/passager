rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Main collection for user and their passwords
    match /users/{userId} {

      // üîê Allow read/write only if logged-in user is owner
      // Since userId in your code is the UID, only check against UID
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;

      // Passwords subcollection (legacy structure)
      match /passwords/{passwordId} {
        allow read, write: if request.auth != null && 
          request.auth.uid == userId;
      }

      // Vaults subcollection (new structure)
      match /vaults/{vaultId} {
        allow read, write: if request.auth != null && 
          request.auth.uid == userId;

        // Passwords within vaults
        match /passwords/{passwordId} {
          allow read, write: if request.auth != null && 
            request.auth.uid == userId;
        }
      }
    }

    // Optional: same rules for user_profiles structure (if you use this)
    match /user_profiles/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;

      match /passwords/{passwordId} {
        allow read, write: if request.auth != null && 
          request.auth.uid == userId;
      }
    }

    // üö´ Deny everything else completely
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
